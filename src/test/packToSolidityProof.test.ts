import { packToSolidityProof } from '../packToSolidityProof';
describe('packToSolidityProof', () => {
  it('should pack proof', () => {
    const input = {
      pi_a: [
        '20198867029481591449044227059973703148827821695521907878135139158709471396237',
        '6274148293492977087831805359865389224496240541071007297546171493809850676839',
        '1',
      ],
      pi_b: [
        [
          '15542156783100721383167770018144325319632981979132331416704894622103531965804',
          '7860063224196157840751011616873067644492528393660044351983341108917777207055',
        ],
        [
          '7094592911821430080368792673655861472844275261230477617827750861055855782876',
          '17580493565269582055215895448788203989831388121433015734404029270233222967492',
        ],
        ['1', '0'],
      ],
      pi_c: [
        '19908416615263879803232940570933085953937532725530214044627591234888747609309',
        '7760776698204455399132829099004755724342622033653237453835779789513088822320',
        '1',
      ],
      protocol: 'groth16',
      curve: 'bn128',
    };
    const solidityInput = packToSolidityProof(input);
    const expected = [
      '20198867029481591449044227059973703148827821695521907878135139158709471396237',
      '6274148293492977087831805359865389224496240541071007297546171493809850676839',
      '7860063224196157840751011616873067644492528393660044351983341108917777207055',
      '15542156783100721383167770018144325319632981979132331416704894622103531965804',
      '17580493565269582055215895448788203989831388121433015734404029270233222967492',
      '7094592911821430080368792673655861472844275261230477617827750861055855782876',
      '19908416615263879803232940570933085953937532725530214044627591234888747609309',
      '7760776698204455399132829099004755724342622033653237453835779789513088822320',
    ];
    expect(solidityInput).toStrictEqual(expected);
  });
});
